@model ProyectoOL.Dto.UserDto

@{
    ViewBag.Title = "Registrar usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="cuerpo_registro">
    <h2 class="titulo_oscuro">Registrate</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container_registro">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="espacio_registro">
                @Html.LabelFor(model => model.Nombre, "Nombre:", htmlAttributes: new { @class = "control-label col-md-2 custom-space" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", placeholder = "Escriba su nombre", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="espacio_registro">
                @Html.LabelFor(model => model.Apellido, "Apellido:", htmlAttributes: new { @class = "control-label col-md-2 custom-space" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control", placeholder = "Escriba su apellido", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="espacio_registro">
                @Html.LabelFor(model => model.Tipo_Documento, "Tipo de documento:", htmlAttributes: new { @class = "control-label col-md-2 custom-space" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Tipo_Documento, new List<SelectListItem>
                                        {
                        new SelectListItem { Text = "CC", Value = "1" },
                        new SelectListItem { Text = "TI", Value = "2" },
                        new SelectListItem { Text = "CE", Value = "3" }
                    }, "Selecciona un tipo de documento", new { @class = "form-control", @required = "required" })
                    @Html.ValidationMessageFor(model => model.Tipo_Documento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="espacio_registro">
                @Html.LabelFor(model => model.Id_Usuario, "Numero de documento:", htmlAttributes: new { @class = "control-label col-md-2 custom-space" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_Usuario, new { htmlAttributes = new { @class = "form-control", type = "text", placeholder = "Ingrese un numero de identificacion", oninput = "this.value = this.value.replace(/[^0-9]/g, ''); if (this.value === '0') this.value = '';", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Id_Usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <script>
                // JavaScript para convertir el campo de número en un campo de texto al cargar la página
                window.addEventListener('load', function () {
                    var input = document.querySelector('[type="text"][placeholder="Ingrese un numero de identificacion"]');
                    input.value = ''; // Establece el valor del campo en blanco
                    input.oninput = function () {
                        this.value = this.value.replace(/[^0-9]/g, ''); // Permite solo números en el campo de texto
                    };
                });
            </script>

            <div class="espacio_registro">
                @Html.LabelFor(model => model.Correo_Electronico, "Correo electronico:", htmlAttributes: new { @class = "control-label col-md-2 custom-space" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Correo_Electronico, new { htmlAttributes = new { @class = "form-control", placeholder = "correo@electronico.com", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Correo_Electronico, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="espacio_registro">
                @Html.LabelFor(model => model.Nombre_Usuario, "Nombre de usuario:", htmlAttributes: new { @class = "control-label col-md-2 custom-space" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre_Usuario, new { htmlAttributes = new { @class = "form-control", placeholder = "Escriba un nombre de usuario", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Nombre_Usuario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="espacio_registro">
                @Html.LabelFor(model => model.Contrasena, "Contraseña:", htmlAttributes: new { @class = "control-label col-md-2 custom-space" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contrasena, new { htmlAttributes = new { @class = "form-control", type = "password", placeholder = "Escriba su contraseña de mínimo 8 caracteres", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Contrasena, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="buttons">
                <input type="submit" value="Registrar" class="btn btn-primary">
                @Html.ActionLink("Cancelar", "Index", "Home", new { area = "" }, new { @class = "btn btn-primary" })
            </div>
        </div>
    }
</section>
